services:
  db:
    image: postgres:latest
    restart: always
    container_name: litellm_db
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d litellm -U llmproxy"]
      interval: 1s
      timeout: 5s
      retries: 10

  litellm:
    image: ghcr.io/berriai/litellm-database:main-stable
    container_name: litellm
    env_file:
      - .env
    environment:
      - LITELLM_MASTER_KEY=${LITELLM_MASTER_KEY}
      - MASTER_KEY=${LITELLM_MASTER_KEY}
      - LITELLM_SALT_KEY=${LITELLM_SALT_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - STORE_MODEL_IN_DB=${STORE_MODEL_IN_DB}
      - ENABLE_PROMETHEUS_METRICS=${ENABLE_PROMETHEUS_METRICS}
    ports:
      - "4000:4000"
    restart: always
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 http://localhost:4000/health/liveliness || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  prometheus:
    image: prom/prometheus
    volumes:
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=15d"
    restart: always
    configs:
      - source: prometheus_inline
        target: /etc/prometheus/prometheus.yml

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "3000:8080"
    volumes:
      - open-webui:/app/backend/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - .env
    environment:
      - WEBUI_AUTH=${WEBUI_AUTH}
      - OPENAI_API_KEY=${LITELLM_MASTER_KEY}
      - OPENAI_API_BASE_URL=${LITELLM_BASE_URL}
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY}
      - CORS_ALLOW_ORIGIN=${CORS_ALLOW_ORIGIN}
      - USER_AGENT=${USER_AGENT}
    restart: always
    depends_on:
      db:
        condition: service_healthy

configs:
  prometheus_inline:
    content: |
      global:
        scrape_interval: 15s
      scrape_configs:
        - job_name: "litellm"
          static_configs:
            - targets: ["litellm:4000"]

volumes:
  postgres_data:
    driver: local
  prometheus_data:
    name: litellm_postgres_data
  open-webui:
