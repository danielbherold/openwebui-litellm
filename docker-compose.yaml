services:
    openwebui:
        image: ghcr.io/open-webui/open-webui:main
        container_name: open-webui
        ports:
            - "3000:8080"
        volumes:
            - open-webui:/app/backend/data
        extra_hosts:
            - "host.docker.internal:host-gateway"
        env_file:
            - .env
        environment:
            - WEBUI_AUTH=${WEBUI_AUTH}
            - OPENAI_API_KEY=${LITELLM_MASTER_KEY}
            - OPENAI_API_BASE_URL=${LITELLM_BASE_URL}
            - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY}
            - CORS_ALLOW_ORIGIN=${CORS_ALLOW_ORIGIN}
            - USER_AGENT=${USER_AGENT}
        restart: always
        depends_on:
          db:
            condition: service_healthy

    litellm:
        build:
          context: .
          args:
            target: runtime
        image: ghcr.io/berriai/litellm-database:main-stable
        container_name: litellm
        env_file:
            - .env
        environment:
            - LITELLM_MASTER_KEY=${LITELLM_MASTER_KEY}
            - MASTER_KEY=${LITELLM_MASTER_KEY}
            - LITELLM_SALT_KEY=${LITELLM_SALT_KEY}
            - DATABASE_URL=${DATABASE_URL}
            - STORE_MODEL_IN_DB=${STORE_MODEL_IN_DB}
            - ENABLE_PROMETHEUS_METRICS=${ENABLE_PROMETHEUS_METRICS}
        ports:
            - "4000:4000"
        restart: always
        depends_on:
            db:
              condition: service_healthy  # Indicates that this service depends on the 'db' service, ensuring 'db' starts first
        healthcheck:  # Defines the health check configuration for the container
            test: [ "CMD-SHELL", "wget --no-verbose --tries=1 http://localhost:4000/health/liveliness || exit 1" ]  # Command to execute for health check
            interval: 30s  # Perform health check every 30 seconds
            timeout: 10s   # Health check command times out after 10 seconds
            retries: 3     # Retry up to 3 times if health check fails
            start_period: 40s  # Wait 40 seconds after container start before beginning health checks

    db:
        image: postgres:latest
        restart: always
        container_name: litellm_db
        env_file:
            - .env
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        volumes:
          - postgres_data:/var/lib/postgresql/data # Persists Postgres data across container restarts
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -d litellm -U llmproxy"]
          interval: 1s
          timeout: 5s
          retries: 10

    prometheus:
      image: prom/prometheus
      volumes:
        - prometheus_data:/prometheus
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
      command:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--storage.tsdb.path=/prometheus"
        - "--storage.tsdb.retention.time=15d"
      restart: always

    # webserver:
    #   image: nginx:latest
    #   ports:
    #     - 80:80
    #     - 443:443
    #   restart: always
    #   volumes:
    #     - ./nginx/conf/:/etc/nginx/conf.d/:ro
    #     - ./certbot/www/:/var/www/certbot/:ro

    # certbot:
    #   image: certbot/certbot:latest
    #   volumes:
    #     - ./certbot/www/:/var/www/certbot/:rw
    #     - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
    open-webui:
    prometheus_data:
      driver: local
    postgres_data:
        name: litellm_postgres_data
